
services:
  web1:
    container_name: demo1-web
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    image: "cechpetr/kontraktor:${WEB_ID1:-latest}"
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    expose:
      - "${PORT1:-8000}"
    links:
      - postgres1:postgres1
    env_file: .env.demo1
    stop_grace_period: "3s"
    depends_on:
      - postgres1
    entrypoint: ["gunicorn", "-c", "python:config.gunicorn", "config.wsgi"]

  web2:
    container_name: demo2-web
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    image: "cechpetr/kontraktor:${WEB_ID2:-latest}"
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    expose:
      - "${PORT2:-8000}"
    links:
      - postgres2:postgres2
    env_file: .env.demo2
    stop_grace_period: "3s"
    depends_on:
      - postgres2
    entrypoint: [ "gunicorn", "-c", "python:config.gunicorn", "config.wsgi" ]

  nginx:
    container_name: nginx-shi
    restart: always
    image: cechpetr/shi-server:latest
    ports:
      - "80:80"
    links:
      - web1:web1
      - web2:web2
    depends_on:
      - web1
      - web2

  postgres1:
    container_name: demo1-psql
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    image: postgres:16-bookworm
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    ports:
      - "${POSTGRES_PORT1:-5432}"
    stop_grace_period: "3s"
    volumes:
      - pgdata1:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${POSTGRES_USER1}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD1}"
      POSTGRES_DB: "${POSTGRES_DB1}"

  postgres2:
    container_name: demo2-psql
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    image: postgres:16-bookworm
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    ports:
      - "${POSTGRES_PORT2:-5432}"
    stop_grace_period: "3s"
    volumes:
      - pgdata2:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${POSTGRES_USER2}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD2}"
      POSTGRES_DB: "${POSTGRES_DB2}"

volumes:
  pgdata1:
    driver: local
  pgdata2:
    driver: local
